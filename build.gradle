plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.openapi.generator' version '6.6.0'
    id 'io.swagger.core.v3.swagger-gradle-plugin' version '2.2.14'
    id 'io.freefair.lombok' version "8.0.1"
    id 'org.sonarqube' version '4.0.0.2929'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'build/generated/swagger/src/main/java'
        }
    }
}
repositories {
    mavenCentral()
    maven { url 'https://plugins.gradle.org/m2/' }
}

configurations.configureEach {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'com.auth0:java-jwt:4.3.0'
    implementation 'org.postgresql:postgresql:42.5.4'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.8'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.7'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

bootJar {
    mainClass = 'com.example.appointmentmgmtsvc.AppointmentMgmtSvcApplication'
}

openApiGenerate {
    generatorName.set("spring")
    inputSpec.set("$rootDir/doc/Swagger-1.0.yaml")
    outputDir.set("$buildDir/generated/swagger")
    packageName.set("com.example.appointmentmgmtsvc")
    apiPackage.set("com.example.appointmentmgmtsvc.api")
    modelPackage.set("com.example.appointmentmgmtsvc.model")
    configOptions.set([
            dateLibrary   : "java17",
            useSpringBoot3: "true"
    ])
    additionalProperties.set([
            interfaceOnly       : 'true',
            skipDefaultInterface: 'true'
    ])
    generateModelTests.set(false)
    generateApiTests.set(false)
    cleanupOutput.set(true)
    importMappings.set([
            GenerationType: 'jakarta.persistence.GenerationType'
    ])
}

sonar {
    properties {
        property 'sonar.host.url', 'http://localhost:9000'
        property 'sonar.token', 'squ_0079e8276599ff65a1fd30d09713eeb5f6c45047'
        property 'sonar.projectKey', 'appointment-mgmt-svc'
        property 'sonar.projectName', 'appointment-mgmt-svc'
        property 'sonar.language', 'java'
        property 'sonar.java.coveragePlugin', 'jacoco'
        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
    dependsOn test
}

tasks['sonar'].dependsOn jacocoTestReport
compileJava.dependsOn tasks.named("openApiGenerate")
